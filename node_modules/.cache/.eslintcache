[{"/home/oben-n/react-ros-robot/src/index.js":"1","/home/oben-n/react-ros-robot/src/App.js":"2","/home/oben-n/react-ros-robot/src/reportWebVitals.js":"3","/home/oben-n/react-ros-robot/src/components/Header.jsx":"4","/home/oben-n/react-ros-robot/src/components/Footer.jsx":"5","/home/oben-n/react-ros-robot/src/components/Body.jsx":"6","/home/oben-n/react-ros-robot/src/components/About.jsx":"7","/home/oben-n/react-ros-robot/src/components/Home.jsx":"8","/home/oben-n/react-ros-robot/src/components/Connection.jsx":"9","/home/oben-n/react-ros-robot/src/scripts/config.js":"10","/home/oben-n/react-ros-robot/src/components/Teleoperation.jsx":"11","/home/oben-n/react-ros-robot/src/components/RobotState.jsx":"12","/home/oben-n/react-ros-robot/src/components/Map.jsx":"13"},{"size":578,"mtime":1668378311816,"results":"14","hashOfConfig":"15"},{"size":275,"mtime":1668798113498,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1668375954377,"results":"17","hashOfConfig":"15"},{"size":725,"mtime":1668797983509,"results":"18","hashOfConfig":"15"},{"size":309,"mtime":1668524983030,"results":"19","hashOfConfig":"15"},{"size":516,"mtime":1668797812752,"results":"20","hashOfConfig":"15"},{"size":276,"mtime":1668524898833,"results":"21","hashOfConfig":"15"},{"size":1185,"mtime":1669486203827,"results":"22","hashOfConfig":"15"},{"size":1967,"mtime":1669488781230,"results":"23","hashOfConfig":"15"},{"size":240,"mtime":1669461377729,"results":"24","hashOfConfig":"15"},{"size":3476,"mtime":1668797244118,"results":"25","hashOfConfig":"15"},{"size":4288,"mtime":1669488801962,"results":"26","hashOfConfig":"15"},{"size":1494,"mtime":1669488554376,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"qv3za4",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/oben-n/react-ros-robot/src/index.js",[],[],[],"/home/oben-n/react-ros-robot/src/App.js",[],[],"/home/oben-n/react-ros-robot/src/reportWebVitals.js",[],[],"/home/oben-n/react-ros-robot/src/components/Header.jsx",[],[],"/home/oben-n/react-ros-robot/src/components/Footer.jsx",[],[],"/home/oben-n/react-ros-robot/src/components/Body.jsx",[],[],"/home/oben-n/react-ros-robot/src/components/About.jsx",[],[],"/home/oben-n/react-ros-robot/src/components/Home.jsx",[],[],"/home/oben-n/react-ros-robot/src/components/Connection.jsx",["69"],[],"/home/oben-n/react-ros-robot/src/scripts/config.js",[],[],"/home/oben-n/react-ros-robot/src/components/Teleoperation.jsx",["70"],[],"import React, { Component } from \"react\";\nimport { Joystick } from 'react-joystick-component';\nimport Config from \"../scripts/config.js\"\n\nclass Teleoperation extends Component {\n    state = {ros: null};\n\n    constructor() {\n        super();\n        this.init_connection();\n\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros(); // window must be used because package is called from index.html\n        console.log(this.state.ros);\n        \n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established in Teleop\");\n            this.setState({connected: true});\n        }); \n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"here\");\n            console.log(\"connection closed!\");\n            this.setState({connected: false});\n\n            // try to reconnect every 3 seconds\n            setTimeout(() => {\n                try {\n                    this.state.ros.connect(\n                        \"ws://\" + \n                        Config.ROSBRIDGE_SERVER_IP + \n                        \":\" +  \n                        Config.ROSBRIDGE_SERVER_PORT +\n                        \"\"\n                    );\n                } catch (error) {\n                    console.log(\"connection problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try {\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP + \n                \":\" +  \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\"connection problem\");\n        }\n    }\n\n    handleMove(event){\n        console.log(\"handle move\");\n        //create ROS publisher cmd_vel\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\"\n        });\n        //create twist message\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: event.y / 100,\n                y: 0,\n                z: 0,\n            },\n            angular:{\n                x: 0,\n                y: 0,\n                z: -event.x / 100,\n            },\n        });\n        //publish the message\n        cmd_vel.publish(twist)\n    }\n\n    handleStop(event){\n        console.log(\"handle stop\");\n        //create ROS publisher cmd_vel\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\"\n        });\n        //create twist message\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n            angular:{\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n        });\n        //publish the message\n        cmd_vel.publish(twist)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Joystick \n                    size={100} \n                    sticky={true} \n                    baseColor=\"#EEEEEE\" \n                    stickColor=\"#BBBBBB\" \n                    move={this.handleMove} \n                    stop={this.handleStop}>\n                </Joystick>\n            </div>)\n    }\n}\n\nexport default Teleoperation;","/home/oben-n/react-ros-robot/src/components/RobotState.jsx",["71"],[],"/home/oben-n/react-ros-robot/src/components/Map.jsx",["72","73"],[],{"ruleId":"74","severity":1,"message":"75","line":15,"column":9,"nodeType":"76","messageId":"77","endLine":15,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":17,"column":9,"nodeType":"76","messageId":"77","endLine":17,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":63,"column":9,"nodeType":"76","messageId":"77","endLine":63,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":17,"column":9,"nodeType":"76","messageId":"77","endLine":17,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":46,"column":13,"nodeType":"80","messageId":"81","endLine":46,"endColumn":22},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-unused-vars","'navClient' is assigned a value but never used.","Identifier","unusedVar"]