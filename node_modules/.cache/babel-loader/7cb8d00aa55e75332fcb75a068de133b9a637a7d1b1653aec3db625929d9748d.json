{"ast":null,"code":"/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Topic = require('../core/Topic');\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib action client.\n *\n * Emits the following events:\n *  * 'timeout' - if a timeout occurred while sending a goal\n *  * 'status' - the status messages received from the action server\n *  * 'feedback' -  the feedback messages received from the action server\n *  * 'result' - the result returned from the action server\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * serverName - the action server name, like /fibonacci\n *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n *   * timeout - the timeout length when connecting to the action server\n */\nfunction ActionClient(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  this.serverName = options.serverName;\n  this.actionName = options.actionName;\n  this.timeout = options.timeout;\n  this.omitFeedback = options.omitFeedback;\n  this.omitStatus = options.omitStatus;\n  this.omitResult = options.omitResult;\n  this.goals = {};\n\n  // flag to check if a status has been received\n  var receivedStatus = false;\n\n  // create the topics associated with actionlib\n  this.feedbackListener = new Topic({\n    ros: this.ros,\n    name: this.serverName + '/feedback',\n    messageType: this.actionName + 'Feedback'\n  });\n  this.statusListener = new Topic({\n    ros: this.ros,\n    name: this.serverName + '/status',\n    messageType: 'actionlib_msgs/GoalStatusArray'\n  });\n  this.resultListener = new Topic({\n    ros: this.ros,\n    name: this.serverName + '/result',\n    messageType: this.actionName + 'Result'\n  });\n  this.goalTopic = new Topic({\n    ros: this.ros,\n    name: this.serverName + '/goal',\n    messageType: this.actionName + 'Goal'\n  });\n  this.cancelTopic = new Topic({\n    ros: this.ros,\n    name: this.serverName + '/cancel',\n    messageType: 'actionlib_msgs/GoalID'\n  });\n\n  // advertise the goal and cancel topics\n  this.goalTopic.advertise();\n  this.cancelTopic.advertise();\n\n  // subscribe to the status topic\n  if (!this.omitStatus) {\n    this.statusListener.subscribe(function (statusMessage) {\n      receivedStatus = true;\n      statusMessage.status_list.forEach(function (status) {\n        var goal = that.goals[status.goal_id.id];\n        if (goal) {\n          goal.emit('status', status);\n        }\n      });\n    });\n  }\n\n  // subscribe the the feedback topic\n  if (!this.omitFeedback) {\n    this.feedbackListener.subscribe(function (feedbackMessage) {\n      var goal = that.goals[feedbackMessage.status.goal_id.id];\n      if (goal) {\n        goal.emit('status', feedbackMessage.status);\n        goal.emit('feedback', feedbackMessage.feedback);\n      }\n    });\n  }\n\n  // subscribe to the result topic\n  if (!this.omitResult) {\n    this.resultListener.subscribe(function (resultMessage) {\n      var goal = that.goals[resultMessage.status.goal_id.id];\n      if (goal) {\n        goal.emit('status', resultMessage.status);\n        goal.emit('result', resultMessage.result);\n      }\n    });\n  }\n\n  // If timeout specified, emit a 'timeout' event if the action server does not respond\n  if (this.timeout) {\n    setTimeout(function () {\n      if (!receivedStatus) {\n        that.emit('timeout');\n      }\n    }, this.timeout);\n  }\n}\nActionClient.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Cancel all goals associated with this ActionClient.\n */\nActionClient.prototype.cancel = function () {\n  var cancelMessage = new Message();\n  this.cancelTopic.publish(cancelMessage);\n};\n\n/**\n * Unsubscribe and unadvertise all topics associated with this ActionClient.\n */\nActionClient.prototype.dispose = function () {\n  this.goalTopic.unadvertise();\n  this.cancelTopic.unadvertise();\n  if (!this.omitStatus) {\n    this.statusListener.unsubscribe();\n  }\n  if (!this.omitFeedback) {\n    this.feedbackListener.unsubscribe();\n  }\n  if (!this.omitResult) {\n    this.resultListener.unsubscribe();\n  }\n};\nmodule.exports = ActionClient;","map":{"version":3,"names":["Topic","require","Message","EventEmitter2","ActionClient","options","that","ros","serverName","actionName","timeout","omitFeedback","omitStatus","omitResult","goals","receivedStatus","feedbackListener","name","messageType","statusListener","resultListener","goalTopic","cancelTopic","advertise","subscribe","statusMessage","status_list","forEach","status","goal","goal_id","id","emit","feedbackMessage","feedback","resultMessage","result","setTimeout","prototype","__proto__","cancel","cancelMessage","publish","dispose","unadvertise","unsubscribe","module","exports"],"sources":["/home/oben-n/react-ros-robot/node_modules/roslib/src/actionlib/ActionClient.js"],"sourcesContent":["/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Topic = require('../core/Topic');\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib action client.\n *\n * Emits the following events:\n *  * 'timeout' - if a timeout occurred while sending a goal\n *  * 'status' - the status messages received from the action server\n *  * 'feedback' -  the feedback messages received from the action server\n *  * 'result' - the result returned from the action server\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * serverName - the action server name, like /fibonacci\n *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n *   * timeout - the timeout length when connecting to the action server\n */\nfunction ActionClient(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  this.serverName = options.serverName;\n  this.actionName = options.actionName;\n  this.timeout = options.timeout;\n  this.omitFeedback = options.omitFeedback;\n  this.omitStatus = options.omitStatus;\n  this.omitResult = options.omitResult;\n  this.goals = {};\n\n  // flag to check if a status has been received\n  var receivedStatus = false;\n\n  // create the topics associated with actionlib\n  this.feedbackListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/feedback',\n    messageType : this.actionName + 'Feedback'\n  });\n\n  this.statusListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/status',\n    messageType : 'actionlib_msgs/GoalStatusArray'\n  });\n\n  this.resultListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/result',\n    messageType : this.actionName + 'Result'\n  });\n\n  this.goalTopic = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/goal',\n    messageType : this.actionName + 'Goal'\n  });\n\n  this.cancelTopic = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/cancel',\n    messageType : 'actionlib_msgs/GoalID'\n  });\n\n  // advertise the goal and cancel topics\n  this.goalTopic.advertise();\n  this.cancelTopic.advertise();\n\n  // subscribe to the status topic\n  if (!this.omitStatus) {\n    this.statusListener.subscribe(function(statusMessage) {\n      receivedStatus = true;\n      statusMessage.status_list.forEach(function(status) {\n        var goal = that.goals[status.goal_id.id];\n        if (goal) {\n          goal.emit('status', status);\n        }\n      });\n    });\n  }\n\n  // subscribe the the feedback topic\n  if (!this.omitFeedback) {\n    this.feedbackListener.subscribe(function(feedbackMessage) {\n      var goal = that.goals[feedbackMessage.status.goal_id.id];\n      if (goal) {\n        goal.emit('status', feedbackMessage.status);\n        goal.emit('feedback', feedbackMessage.feedback);\n      }\n    });\n  }\n\n  // subscribe to the result topic\n  if (!this.omitResult) {\n    this.resultListener.subscribe(function(resultMessage) {\n      var goal = that.goals[resultMessage.status.goal_id.id];\n\n      if (goal) {\n        goal.emit('status', resultMessage.status);\n        goal.emit('result', resultMessage.result);\n      }\n    });\n  }\n\n  // If timeout specified, emit a 'timeout' event if the action server does not respond\n  if (this.timeout) {\n    setTimeout(function() {\n      if (!receivedStatus) {\n        that.emit('timeout');\n      }\n    }, this.timeout);\n  }\n}\n\nActionClient.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Cancel all goals associated with this ActionClient.\n */\nActionClient.prototype.cancel = function() {\n  var cancelMessage = new Message();\n  this.cancelTopic.publish(cancelMessage);\n};\n\n/**\n * Unsubscribe and unadvertise all topics associated with this ActionClient.\n */\nActionClient.prototype.dispose = function() {\n  this.goalTopic.unadvertise();\n  this.cancelTopic.unadvertise();\n  if (!this.omitStatus) {this.statusListener.unsubscribe();}\n  if (!this.omitFeedback) {this.feedbackListener.unsubscribe();}\n  if (!this.omitResult) {this.resultListener.unsubscribe();}\n};\n\nmodule.exports = ActionClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}