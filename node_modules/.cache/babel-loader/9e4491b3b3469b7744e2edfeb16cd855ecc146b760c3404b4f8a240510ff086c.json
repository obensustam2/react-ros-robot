{"ast":null,"code":"/**\n * @fileOverview\n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfMaterial = require('./UrdfMaterial');\nvar UrdfLink = require('./UrdfLink');\nvar UrdfJoint = require('./UrdfJoint');\nvar DOMParser = require('@xmldom/xmldom').DOMParser;\n\n// See https://developer.mozilla.org/docs/XPathResult#Constants\nvar XPATH_FIRST_ORDERED_NODE_TYPE = 9;\n\n/**\n * A URDF Model can be used to parse a given URDF into the appropriate elements.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n *  * string - the XML element to parse as a string\n */\nfunction UrdfModel(options) {\n  options = options || {};\n  var xmlDoc = options.xml;\n  var string = options.string;\n  this.materials = {};\n  this.links = {};\n  this.joints = {};\n\n  // Check if we are using a string or an XML element\n  if (string) {\n    // Parse the string\n    var parser = new DOMParser();\n    xmlDoc = parser.parseFromString(string, 'text/xml');\n  }\n\n  // Initialize the model with the given XML node.\n  // Get the robot tag\n  var robotXml = xmlDoc.documentElement;\n\n  // Get the robot name\n  this.name = robotXml.getAttribute('name');\n\n  // Parse all the visual elements we need\n  for (var nodes = robotXml.childNodes, i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.tagName === 'material') {\n      var material = new UrdfMaterial({\n        xml: node\n      });\n      // Make sure this is unique\n      if (this.materials[material.name] !== void 0) {\n        if (this.materials[material.name].isLink()) {\n          this.materials[material.name].assign(material);\n        } else {\n          console.warn('Material ' + material.name + 'is not unique.');\n        }\n      } else {\n        this.materials[material.name] = material;\n      }\n    } else if (node.tagName === 'link') {\n      var link = new UrdfLink({\n        xml: node\n      });\n      // Make sure this is unique\n      if (this.links[link.name] !== void 0) {\n        console.warn('Link ' + link.name + ' is not unique.');\n      } else {\n        // Check for a material\n        for (var j = 0; j < link.visuals.length; j++) {\n          var mat = link.visuals[j].material;\n          if (mat !== null && mat.name) {\n            if (this.materials[mat.name] !== void 0) {\n              link.visuals[j].material = this.materials[mat.name];\n            } else {\n              this.materials[mat.name] = mat;\n            }\n          }\n        }\n\n        // Add the link\n        this.links[link.name] = link;\n      }\n    } else if (node.tagName === 'joint') {\n      var joint = new UrdfJoint({\n        xml: node\n      });\n      this.joints[joint.name] = joint;\n    }\n  }\n}\nmodule.exports = UrdfModel;","map":{"version":3,"names":["UrdfMaterial","require","UrdfLink","UrdfJoint","DOMParser","XPATH_FIRST_ORDERED_NODE_TYPE","UrdfModel","options","xmlDoc","xml","string","materials","links","joints","parser","parseFromString","robotXml","documentElement","name","getAttribute","nodes","childNodes","i","length","node","tagName","material","isLink","assign","console","warn","link","j","visuals","mat","joint","module","exports"],"sources":["/home/oben-n/react-ros-robot/node_modules/roslib/src/urdf/UrdfModel.js"],"sourcesContent":["/**\n * @fileOverview\n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfMaterial = require('./UrdfMaterial');\nvar UrdfLink = require('./UrdfLink');\nvar UrdfJoint = require('./UrdfJoint');\nvar DOMParser = require('@xmldom/xmldom').DOMParser;\n\n// See https://developer.mozilla.org/docs/XPathResult#Constants\nvar XPATH_FIRST_ORDERED_NODE_TYPE = 9;\n\n/**\n * A URDF Model can be used to parse a given URDF into the appropriate elements.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n *  * string - the XML element to parse as a string\n */\nfunction UrdfModel(options) {\n  options = options || {};\n  var xmlDoc = options.xml;\n  var string = options.string;\n  this.materials = {};\n  this.links = {};\n  this.joints = {};\n\n  // Check if we are using a string or an XML element\n  if (string) {\n    // Parse the string\n    var parser = new DOMParser();\n    xmlDoc = parser.parseFromString(string, 'text/xml');\n  }\n\n  // Initialize the model with the given XML node.\n  // Get the robot tag\n  var robotXml = xmlDoc.documentElement;\n\n  // Get the robot name\n  this.name = robotXml.getAttribute('name');\n\n  // Parse all the visual elements we need\n  for (var nodes = robotXml.childNodes, i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.tagName === 'material') {\n      var material = new UrdfMaterial({\n        xml : node\n      });\n      // Make sure this is unique\n      if (this.materials[material.name] !== void 0) {\n        if( this.materials[material.name].isLink() ) {\n          this.materials[material.name].assign( material );\n        } else {\n          console.warn('Material ' + material.name + 'is not unique.');\n        }\n      } else {\n        this.materials[material.name] = material;\n      }\n    } else if (node.tagName === 'link') {\n      var link = new UrdfLink({\n        xml : node\n      });\n      // Make sure this is unique\n      if (this.links[link.name] !== void 0) {\n        console.warn('Link ' + link.name + ' is not unique.');\n      } else {\n        // Check for a material\n        for( var j=0; j<link.visuals.length; j++ )\n        {\n          var mat = link.visuals[j].material;\n          if ( mat !== null && mat.name ) {\n            if (this.materials[mat.name] !== void 0) {\n              link.visuals[j].material = this.materials[mat.name];\n            } else {\n              this.materials[mat.name] = mat;\n            }\n          }\n        }\n\n        // Add the link\n        this.links[link.name] = link;\n      }\n    } else if (node.tagName === 'joint') {\n      var joint = new UrdfJoint({\n        xml : node\n      });\n      this.joints[joint.name] = joint;\n    }\n  }\n}\n\nmodule.exports = UrdfModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}