{"ast":null,"code":"/**\n * @fileOverview\n * @author David V. Lu!!  davidvlu@gmail.com\n */\n\nvar Pose = require('../math/Pose');\nvar Vector3 = require('../math/Vector3');\nvar Quaternion = require('../math/Quaternion');\n\n/**\n * A Joint element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfJoint(options) {\n  this.name = options.xml.getAttribute('name');\n  this.type = options.xml.getAttribute('type');\n  var parents = options.xml.getElementsByTagName('parent');\n  if (parents.length > 0) {\n    this.parent = parents[0].getAttribute('link');\n  }\n  var children = options.xml.getElementsByTagName('child');\n  if (children.length > 0) {\n    this.child = children[0].getAttribute('link');\n  }\n  var limits = options.xml.getElementsByTagName('limit');\n  if (limits.length > 0) {\n    this.minval = parseFloat(limits[0].getAttribute('lower'));\n    this.maxval = parseFloat(limits[0].getAttribute('upper'));\n  }\n\n  // Origin\n  var origins = options.xml.getElementsByTagName('origin');\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x: parseFloat(xyz[0]),\n        y: parseFloat(xyz[1]),\n        z: parseFloat(xyz[2])\n      });\n    }\n\n    // Check the RPY\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n    if (rpy) {\n      rpy = rpy.split(' ');\n      // Convert from RPY\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the) * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the) * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the) * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the) * Math.sin(psi);\n      orientation = new Quaternion({\n        x: x,\n        y: y,\n        z: z,\n        w: w\n      });\n      orientation.normalize();\n    }\n    this.origin = new Pose({\n      position: position,\n      orientation: orientation\n    });\n  }\n}\nmodule.exports = UrdfJoint;","map":{"version":3,"names":["Pose","require","Vector3","Quaternion","UrdfJoint","options","name","xml","getAttribute","type","parents","getElementsByTagName","length","parent","children","child","limits","minval","parseFloat","maxval","origins","origin","xyz","position","split","x","y","z","rpy","orientation","roll","pitch","yaw","phi","the","psi","Math","sin","cos","w","normalize","module","exports"],"sources":["/home/oben-n/react-ros-robot/node_modules/roslib/src/urdf/UrdfJoint.js"],"sourcesContent":["/**\n * @fileOverview\n * @author David V. Lu!!  davidvlu@gmail.com\n */\n\nvar Pose = require('../math/Pose');\nvar Vector3 = require('../math/Vector3');\nvar Quaternion = require('../math/Quaternion');\n\n/**\n * A Joint element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfJoint(options) {\n  this.name = options.xml.getAttribute('name');\n  this.type = options.xml.getAttribute('type');\n\n  var parents = options.xml.getElementsByTagName('parent');\n  if(parents.length > 0) {\n    this.parent = parents[0].getAttribute('link');\n  }\n\n  var children = options.xml.getElementsByTagName('child');\n  if(children.length > 0) {\n    this.child = children[0].getAttribute('link');\n  }\n\n  var limits = options.xml.getElementsByTagName('limit');\n  if (limits.length > 0) {\n    this.minval = parseFloat( limits[0].getAttribute('lower') );\n    this.maxval = parseFloat( limits[0].getAttribute('upper') );\n  }\n\n  // Origin\n  var origins = options.xml.getElementsByTagName('origin');\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x : parseFloat(xyz[0]),\n        y : parseFloat(xyz[1]),\n        z : parseFloat(xyz[2])\n      });\n    }\n\n    // Check the RPY\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n    if (rpy) {\n      rpy = rpy.split(' ');\n      // Convert from RPY\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n          * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n          * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n          * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n          * Math.sin(psi);\n\n      orientation = new Quaternion({\n        x : x,\n        y : y,\n        z : z,\n        w : w\n      });\n      orientation.normalize();\n    }\n    this.origin = new Pose({\n      position : position,\n      orientation : orientation\n    });\n  }\n}\n\nmodule.exports = UrdfJoint;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}