{"ast":null,"code":"var WebSocket = WebSocket || require('ws');\nmodule.exports = function (self) {\n  var socket = null;\n  function handleSocketMessage(ev) {\n    var data = ev.data;\n    if (data instanceof ArrayBuffer) {\n      // binary message, transfer for speed\n      self.postMessage(data, [data]);\n    } else {\n      // JSON message, copy string\n      self.postMessage(data);\n    }\n  }\n  function handleSocketControl(ev) {\n    self.postMessage({\n      type: ev.type\n    });\n  }\n  self.addEventListener('message', function (ev) {\n    var data = ev.data;\n    if (typeof data === 'string') {\n      // JSON message from ROSLIB\n      socket.send(data);\n    } else {\n      // control message\n      if (data.hasOwnProperty('close')) {\n        socket.close();\n        socket = null;\n      } else if (data.hasOwnProperty('uri')) {\n        var uri = data.uri;\n        socket = new WebSocket(uri);\n        socket.binaryType = 'arraybuffer';\n        socket.onmessage = handleSocketMessage;\n        socket.onclose = handleSocketControl;\n        socket.onopen = handleSocketControl;\n        socket.onerror = handleSocketControl;\n      } else {\n        throw 'Unknown message to WorkerSocket';\n      }\n    }\n  });\n};","map":{"version":3,"names":["WebSocket","require","module","exports","self","socket","handleSocketMessage","ev","data","ArrayBuffer","postMessage","handleSocketControl","type","addEventListener","send","hasOwnProperty","close","uri","binaryType","onmessage","onclose","onopen","onerror"],"sources":["/home/oben-n/react-ros-robot/node_modules/roslib/src/util/workerSocketImpl.js"],"sourcesContent":["var WebSocket = WebSocket || require('ws');\n\nmodule.exports = function(self) {\n  var socket = null;\n\n  function handleSocketMessage(ev) {\n    var data = ev.data;\n\n    if (data instanceof ArrayBuffer) {\n      // binary message, transfer for speed\n      self.postMessage(data, [data]);\n    } else {\n      // JSON message, copy string\n      self.postMessage(data);\n    }\n  }\n\n  function handleSocketControl(ev) {\n    self.postMessage({type: ev.type});\n  }\n\n  self.addEventListener('message', function(ev) {\n    var data = ev.data;\n\n    if (typeof data === 'string') {\n      // JSON message from ROSLIB\n      socket.send(data);\n    } else {\n      // control message\n      if (data.hasOwnProperty('close')) {\n        socket.close();\n        socket = null;\n      } else if (data.hasOwnProperty('uri')) {\n        var uri = data.uri;\n\n        socket = new WebSocket(uri);\n        socket.binaryType = 'arraybuffer';\n\n        socket.onmessage = handleSocketMessage;\n        socket.onclose = handleSocketControl;\n        socket.onopen = handleSocketControl;\n        socket.onerror = handleSocketControl;\n      } else {\n        throw 'Unknown message to WorkerSocket';\n      }\n    }\n  });\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGA,SAAS,IAAIC,OAAO,CAAC,IAAI,CAAC;AAE1CC,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,MAAM,GAAG,IAAI;EAEjB,SAASC,mBAAmB,CAACC,EAAE,EAAE;IAC/B,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAElB,IAAIA,IAAI,YAAYC,WAAW,EAAE;MAC/B;MACAL,IAAI,CAACM,WAAW,CAACF,IAAI,EAAE,CAACA,IAAI,CAAC,CAAC;IAChC,CAAC,MAAM;MACL;MACAJ,IAAI,CAACM,WAAW,CAACF,IAAI,CAAC;IACxB;EACF;EAEA,SAASG,mBAAmB,CAACJ,EAAE,EAAE;IAC/BH,IAAI,CAACM,WAAW,CAAC;MAACE,IAAI,EAAEL,EAAE,CAACK;IAAI,CAAC,CAAC;EACnC;EAEAR,IAAI,CAACS,gBAAgB,CAAC,SAAS,EAAE,UAASN,EAAE,EAAE;IAC5C,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAElB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC5B;MACAH,MAAM,CAACS,IAAI,CAACN,IAAI,CAAC;IACnB,CAAC,MAAM;MACL;MACA,IAAIA,IAAI,CAACO,cAAc,CAAC,OAAO,CAAC,EAAE;QAChCV,MAAM,CAACW,KAAK,EAAE;QACdX,MAAM,GAAG,IAAI;MACf,CAAC,MAAM,IAAIG,IAAI,CAACO,cAAc,CAAC,KAAK,CAAC,EAAE;QACrC,IAAIE,GAAG,GAAGT,IAAI,CAACS,GAAG;QAElBZ,MAAM,GAAG,IAAIL,SAAS,CAACiB,GAAG,CAAC;QAC3BZ,MAAM,CAACa,UAAU,GAAG,aAAa;QAEjCb,MAAM,CAACc,SAAS,GAAGb,mBAAmB;QACtCD,MAAM,CAACe,OAAO,GAAGT,mBAAmB;QACpCN,MAAM,CAACgB,MAAM,GAAGV,mBAAmB;QACnCN,MAAM,CAACiB,OAAO,GAAGX,mBAAmB;MACtC,CAAC,MAAM;QACL,MAAM,iCAAiC;MACzC;IACF;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}