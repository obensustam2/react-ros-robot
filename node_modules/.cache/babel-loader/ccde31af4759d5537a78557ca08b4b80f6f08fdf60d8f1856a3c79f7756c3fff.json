{"ast":null,"code":"try {\n  var work = require('webworkify');\n} catch (ReferenceError) {\n  // webworkify raises ReferenceError when required inside webpack\n  var work = require('webworkify-webpack');\n}\nvar workerSocketImpl = require('./workerSocketImpl');\nfunction WorkerSocket(uri) {\n  this.socket_ = work(workerSocketImpl);\n  this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n  this.socket_.postMessage({\n    uri: uri\n  });\n}\nWorkerSocket.prototype.handleWorkerMessage_ = function (ev) {\n  var data = ev.data;\n  if (data instanceof ArrayBuffer || typeof data === 'string') {\n    // binary or JSON message from rosbridge\n    this.onmessage(ev);\n  } else {\n    // control message from the wrapped WebSocket\n    var type = data.type;\n    if (type === 'close') {\n      this.onclose(null);\n    } else if (type === 'open') {\n      this.onopen(null);\n    } else if (type === 'error') {\n      this.onerror(null);\n    } else {\n      throw 'Unknown message from workersocket';\n    }\n  }\n};\nWorkerSocket.prototype.send = function (data) {\n  this.socket_.postMessage(data);\n};\nWorkerSocket.prototype.close = function () {\n  this.socket_.postMessage({\n    close: true\n  });\n};\nmodule.exports = WorkerSocket;","map":{"version":3,"names":["work","require","ReferenceError","workerSocketImpl","WorkerSocket","uri","socket_","addEventListener","handleWorkerMessage_","bind","postMessage","prototype","ev","data","ArrayBuffer","onmessage","type","onclose","onopen","onerror","send","close","module","exports"],"sources":["/home/oben-n/react-ros-robot/node_modules/roslib/src/util/workerSocket.js"],"sourcesContent":["try {\n    var work = require('webworkify');\n} catch(ReferenceError) {\n    // webworkify raises ReferenceError when required inside webpack\n    var work = require('webworkify-webpack');\n}\nvar workerSocketImpl = require('./workerSocketImpl');\n\nfunction WorkerSocket(uri) {\n  this.socket_ = work(workerSocketImpl);\n\n  this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n\n  this.socket_.postMessage({\n    uri: uri,\n  });\n}\n\nWorkerSocket.prototype.handleWorkerMessage_ = function(ev) {\n  var data = ev.data;\n  if (data instanceof ArrayBuffer || typeof data === 'string') {\n    // binary or JSON message from rosbridge\n    this.onmessage(ev);\n  } else {\n    // control message from the wrapped WebSocket\n    var type = data.type;\n    if (type === 'close') {\n      this.onclose(null);\n    } else if (type === 'open') {\n      this.onopen(null);\n    } else if (type === 'error') {\n      this.onerror(null);\n    } else {\n      throw 'Unknown message from workersocket';\n    }\n  }\n};\n\nWorkerSocket.prototype.send = function(data) {\n  this.socket_.postMessage(data);\n};\n\nWorkerSocket.prototype.close = function() {\n  this.socket_.postMessage({\n    close: true\n  });\n};\n\nmodule.exports = WorkerSocket;\n"],"mappings":"AAAA,IAAI;EACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AACpC,CAAC,CAAC,OAAMC,cAAc,EAAE;EACpB;EACA,IAAIF,IAAI,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC5C;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAEpD,SAASG,YAAY,CAACC,GAAG,EAAE;EACzB,IAAI,CAACC,OAAO,GAAGN,IAAI,CAACG,gBAAgB,CAAC;EAErC,IAAI,CAACG,OAAO,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE9E,IAAI,CAACH,OAAO,CAACI,WAAW,CAAC;IACvBL,GAAG,EAAEA;EACP,CAAC,CAAC;AACJ;AAEAD,YAAY,CAACO,SAAS,CAACH,oBAAoB,GAAG,UAASI,EAAE,EAAE;EACzD,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;EAClB,IAAIA,IAAI,YAAYC,WAAW,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC3D;IACA,IAAI,CAACE,SAAS,CAACH,EAAE,CAAC;EACpB,CAAC,MAAM;IACL;IACA,IAAII,IAAI,GAAGH,IAAI,CAACG,IAAI;IACpB,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM,IAAID,IAAI,KAAK,MAAM,EAAE;MAC1B,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM,IAAIF,IAAI,KAAK,OAAO,EAAE;MAC3B,IAAI,CAACG,OAAO,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACL,MAAM,mCAAmC;IAC3C;EACF;AACF,CAAC;AAEDf,YAAY,CAACO,SAAS,CAACS,IAAI,GAAG,UAASP,IAAI,EAAE;EAC3C,IAAI,CAACP,OAAO,CAACI,WAAW,CAACG,IAAI,CAAC;AAChC,CAAC;AAEDT,YAAY,CAACO,SAAS,CAACU,KAAK,GAAG,YAAW;EACxC,IAAI,CAACf,OAAO,CAACI,WAAW,CAAC;IACvBW,KAAK,EAAE;EACT,CAAC,CAAC;AACJ,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGnB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}