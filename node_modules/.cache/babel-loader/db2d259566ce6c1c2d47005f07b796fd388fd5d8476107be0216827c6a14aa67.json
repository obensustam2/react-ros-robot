{"ast":null,"code":"/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;\n!function (undefined) {\n  var hasOwnProperty = Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported = typeof process == 'object' && typeof process.nextTick == 'function';\n  var symbolsSupported = typeof Symbol === 'function';\n  var reflectSupported = typeof Reflect === 'object';\n  var setImmediateSupported = typeof setImmediate === 'function';\n  var _setImmediate = setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys = symbolsSupported ? reflectSupported && typeof Reflect.ownKeys === 'function' ? Reflect.ownKeys : function (obj) {\n    var arr = Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  } : Object.keys;\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      if (conf.maxListeners !== undefined) {\n        this._maxListeners = conf.maxListeners;\n      }\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';\n    if (this.verboseMemoryLeak) {\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n    if (typeof process !== 'undefined' && process.emitWarning) {\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n    var on, off;\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n    this._on = on;\n    this._off = off;\n    var _observers = emitter._observers;\n    if (_observers) {\n      _observers.push(this);\n    } else {\n      emitter._observers = [this];\n    }\n  }\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function (event, localEvent, reducer) {\n      var observer = this;\n      var target = this._target;\n      var emitter = this._emitter;\n      var listeners = this._listeners;\n      var handler = function () {\n        var args = toArray.apply(null, arguments);\n        var eventObj = {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if (reducer) {\n          var result = reducer.call(target, eventObj);\n          if (result !== false) {\n            emitter.emit.apply(emitter, [eventObj.name].concat(args));\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n      if (listeners[event]) {\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n      this._listenersCount++;\n      if (emitter._newListener && emitter._removeListener && !observer._onNewListener) {\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n        emitter.on('newListener', this._onNewListener);\n        this._onRemoveListener = function (_event) {\n          if (_event === localEvent && !emitter.hasListeners(_event) && listeners[event]) {\n            listeners[event] = null;\n            observer._off.call(target, event, handler);\n          }\n        };\n        listeners[event] = null;\n        emitter.on('removeListener', this._onRemoveListener);\n      } else {\n        listeners[event] = handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n    unsubscribe: function (event) {\n      var observer = this;\n      var listeners = this._listeners;\n      var emitter = this._emitter;\n      var handler;\n      var events;\n      var off = this._off;\n      var target = this._target;\n      var i;\n      if (event && typeof event !== 'string') {\n        throw TypeError('event must be a string');\n      }\n      function clearRefs() {\n        if (observer._onNewListener) {\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener = null;\n          observer._onRemoveListener = null;\n        }\n        var index = findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n      if (event) {\n        handler = listeners[event];\n        if (!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if (! --this._listenersCount) {\n          clearRefs();\n        }\n      } else {\n        events = ownKeys(listeners);\n        i = events.length;\n        while (i-- > 0) {\n          event = events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners = {};\n        this._listenersCount = 0;\n        clearRefs();\n      }\n    }\n  });\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n    if (!options) return computedOptions;\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object');\n    }\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''));\n    }\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n  function makeTypeReducer(types) {\n    var message = 'value must be type of ' + types.join('|');\n    var len = types.length;\n    var firstType = types[0];\n    var secondType = types[1];\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      };\n    }\n    if (len === 2) {\n      return function (v, reject) {\n        var kind = typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      };\n    }\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    };\n  }\n  var functionReducer = makeTypeReducer(['function']);\n  var objectFunctionReducer = makeTypeReducer(['object', 'function']);\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer = 0;\n    var subscriptionClosed;\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options = resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function (value, reject) {\n          value *= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n      var _resolve = function (value) {\n        cleanup();\n        resolve(value);\n      };\n      var _reject = function (err) {\n        cleanup();\n        reject(err);\n      };\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function (reason) {\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously');\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed = true;\n      }\n      if (options.timeout > 0) {\n        timer = setTimeout(function () {\n          var reason = Error('timeout');\n          reason.code = 'ETIMEDOUT';\n          timer = 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n    return promise;\n  }\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if (!observers) {\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns,\n          n,\n          l = 0,\n          j = 0,\n          delimiter = this.delimiter,\n          dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n    var listeners = null,\n      branch,\n      xTree,\n      xxTree,\n      isolatedBranch,\n      endReached,\n      currentType = type[i],\n      nextType = type[i + 1],\n      branches,\n      _listeners;\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if (tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches = ownKeys(xxTree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {\n                '**': isolatedBranch\n              }, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n    return listeners;\n  }\n  function growListenerTree(type, listener, prepend) {\n    var len = 0,\n      j = 0,\n      i,\n      delimiter = this.delimiter,\n      dl = delimiter.length,\n      ns;\n    if (typeof type === 'string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n        ns[len++] = type.slice(j);\n      } else {\n        ns = [type];\n        len = 1;\n      }\n    } else {\n      ns = type;\n      len = type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n    var tree = this.listenerTree,\n      name;\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n      tree = tree[name] || (tree[name] = {});\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n    return true;\n  }\n  function collectTreeEvents(tree, events, root, asArray) {\n    var branches = ownKeys(tree);\n    var i = branches.length;\n    var branch, branchName, path;\n    var hasListeners = tree['_listeners'];\n    var isArrayPath;\n    while (i-- > 0) {\n      branchName = branches[i];\n      branch = tree[branchName];\n      if (branchName === '_listeners') {\n        path = root;\n      } else {\n        path = root ? root.concat(branchName) : [branchName];\n      }\n      isArrayPath = asArray || typeof branchName === 'symbol';\n      hasListeners && events.push(isArrayPath ? path : path.join(this.delimiter));\n      if (typeof branch === 'object') {\n        collectTreeEvents.call(this, branch, events, path, isArrayPath);\n      }\n    }\n    return events;\n  }\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i = keys.length;\n    var obj, key, flag;\n    while (i-- > 0) {\n      key = keys[i];\n      obj = root[key];\n      if (obj) {\n        flag = true;\n        if (key !== '_listeners' && !recursivelyGarbageCollect(obj)) {\n          delete root[key];\n        }\n      }\n    }\n    return flag;\n  }\n  function Listener(emitter, event, listener) {\n    this.emitter = emitter;\n    this.event = event;\n    this.listener = listener;\n  }\n  Listener.prototype.off = function () {\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n  function setupListener(event, listener, options) {\n    if (options === true) {\n      promisify = true;\n    } else if (options === false) {\n      async = true;\n    } else {\n      if (!options || typeof options !== 'object') {\n        throw TypeError('options should be an object or true');\n      }\n      var async = options.async;\n      var promisify = options.promisify;\n      var nextTick = options.nextTick;\n      var objectify = options.objectify;\n    }\n    if (async || nextTick || promisify) {\n      var _listener = listener;\n      var _origin = listener._origin || listener;\n      if (nextTick && !nextTickSupported) {\n        throw Error('process.nextTick is not supported');\n      }\n      if (promisify === undefined) {\n        promisify = listener.constructor.name === 'AsyncFunction';\n      }\n      listener = function () {\n        var args = arguments;\n        var context = this;\n        var event = this.event;\n        return promisify ? nextTick ? Promise.resolve() : new Promise(function (resolve) {\n          _setImmediate(resolve);\n        }).then(function () {\n          context.event = event;\n          return _listener.apply(context, args);\n        }) : (nextTick ? process.nextTick : _setImmediate)(function () {\n          context.event = event;\n          _listener.apply(context, args);\n        });\n      };\n      listener._async = true;\n      listener._origin = _origin;\n    }\n    return [listener, objectify ? new Listener(this, event, listener) : this];\n  }\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo = function (target, events, options) {\n    if (typeof target !== 'object') {\n      throw TypeError('target musts be an object');\n    }\n    var emitter = this;\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n    function listen(events) {\n      if (typeof events !== 'object') {\n        throw TypeError('events must be an object');\n      }\n      var reducers = options.reducers;\n      var index = findTargetIndex.call(emitter, target);\n      var observer;\n      if (index === -1) {\n        observer = new TargetObserver(emitter, target, options);\n      } else {\n        observer = emitter._observers[index];\n      }\n      var keys = ownKeys(events);\n      var len = keys.length;\n      var event;\n      var isSingleReducer = typeof reducers === 'function';\n      for (var i = 0; i < len; i++) {\n        event = keys[i];\n        observer.subscribe(event, events[event] || event, isSingleReducer ? reducers : reducers && reducers[event]);\n      }\n    }\n    isArray(events) ? listen(toObject(events)) : typeof events === 'string' ? listen(toObject(events.split(/\\s+/))) : listen(events);\n    return this;\n  };\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n    if (!observers) {\n      return false;\n    }\n    var i = observers.length;\n    var observer;\n    var matched = false;\n    if (target && typeof target !== 'object') {\n      throw TypeError('target should be an object');\n    }\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched = true;\n      }\n    }\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n  EventEmitter.prototype.setMaxListeners = function (n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n  EventEmitter.prototype.getMaxListeners = function () {\n    return this._maxListeners;\n  };\n  EventEmitter.prototype.event = '';\n  EventEmitter.prototype.once = function (event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n  EventEmitter.prototype.prependOnceListener = function (event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n  EventEmitter.prototype._once = function (event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n  EventEmitter.prototype.many = function (event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n  EventEmitter.prototype.prependMany = function (event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n  EventEmitter.prototype._many = function (event, ttl, fn, prepend, options) {\n    var self = this;\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n    listener._origin = fn;\n    return this._on(event, listener, prepend, options);\n  };\n  EventEmitter.prototype.emit = function () {\n    if (!this._events && !this._all) {\n      return false;\n    }\n    this._events || init.call(this);\n    var type = arguments[0],\n      ns,\n      wildcard = this.wildcard;\n    var args, l, i, j, containsSymbol;\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n    if (wildcard) {\n      ns = type;\n      if (type !== 'newListener' && type !== 'removeListener') {\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n    var al = arguments.length;\n    var handler;\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler[i].call(this, type);\n            break;\n          case 2:\n            handler[i].call(this, type, arguments[1]);\n            break;\n          case 3:\n            handler[i].call(this, type, arguments[1], arguments[2]);\n            break;\n          default:\n            handler[i].apply(this, arguments);\n        }\n      }\n    }\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler.call(this);\n            break;\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          default:\n            args = new Array(al - 1);\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n            handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler[i].call(this);\n            break;\n          case 2:\n            handler[i].call(this, arguments[1]);\n            break;\n          case 3:\n            handler[i].call(this, arguments[1], arguments[2]);\n            break;\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n    return !!this._all;\n  };\n  EventEmitter.prototype.emitAsync = function () {\n    if (!this._events && !this._all) {\n      return false;\n    }\n    this._events || init.call(this);\n    var type = arguments[0],\n      wildcard = this.wildcard,\n      ns,\n      containsSymbol;\n    var args, l, i, j;\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return Promise.resolve([false]);\n      }\n    }\n    if (wildcard) {\n      ns = type;\n      if (type !== 'newListener' && type !== 'removeListener') {\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n    var promises = [];\n    var al = arguments.length;\n    var handler;\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            promises.push(this._all[i].call(this, type));\n            break;\n          case 2:\n            promises.push(this._all[i].call(this, type, arguments[1]));\n            break;\n          case 3:\n            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n            break;\n          default:\n            promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n        case 1:\n          promises.push(handler.call(this));\n          break;\n        case 2:\n          promises.push(handler.call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler.call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            promises.push(handler[i].call(this));\n            break;\n          case 2:\n            promises.push(handler[i].call(this, arguments[1]));\n            break;\n          case 3:\n            promises.push(handler[i].call(this, arguments[1], arguments[2]));\n            break;\n          default:\n            promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n    return Promise.all(promises);\n  };\n  EventEmitter.prototype.on = function (type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n  EventEmitter.prototype.prependListener = function (type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n  EventEmitter.prototype.onAny = function (fn) {\n    return this._onAny(fn, false);\n  };\n  EventEmitter.prototype.prependAny = function (fn) {\n    return this._onAny(fn, true);\n  };\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n  EventEmitter.prototype._onAny = function (fn, prepend) {\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if (prepend) {\n      this._all.unshift(fn);\n    } else {\n      this._all.push(fn);\n    }\n    return this;\n  };\n  EventEmitter.prototype._on = function (type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n    var returnValue = this,\n      temp;\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if (prepend) {\n        this._events[type].unshift(listener);\n      } else {\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n    return returnValue;\n  };\n  EventEmitter.prototype.off = function (type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n    var handlers,\n      leafs = [];\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if (!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({\n        _listeners: handlers\n      });\n    }\n    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n        var position = -1;\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n            position = i;\n            break;\n          }\n        }\n        if (position < 0) {\n          continue;\n        }\n        if (this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        } else {\n          this._events[type].splice(position, 1);\n        }\n        if (handlers.length === 0) {\n          if (this.wildcard) {\n            delete leaf._listeners;\n          } else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n        return this;\n      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n        if (this.wildcard) {\n          delete leaf._listeners;\n        } else {\n          delete this._events[type];\n        }\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n      }\n    }\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    return this;\n  };\n  EventEmitter.prototype.offAny = function (fn) {\n    var i = 0,\n      l = 0,\n      fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for (i = 0, l = fns.length; i < l; i++) {\n        if (fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener) this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for (i = 0, l = fns.length; i < l; i++) this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0),\n        leaf,\n        i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n      if (!_events) {\n        return [];\n      }\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree = this.listenerTree;\n        if (!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n      if (!_events) {\n        return [];\n      }\n      listeners = _events[type];\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n  EventEmitter.prototype.eventNames = function (nsAsArray) {\n    var _events = this._events;\n    return this.wildcard ? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : _events ? ownKeys(_events) : [];\n  };\n  EventEmitter.prototype.listenerCount = function (type) {\n    return this.listeners(type).length;\n  };\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n    var _events = this._events;\n    var _all = this._all;\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n  EventEmitter.prototype.listenersAny = function () {\n    if (this._all) {\n      return this._all;\n    } else {\n      return [];\n    }\n  };\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {\n        timeout: options\n      };\n    } else if (type === 'function') {\n      options = {\n        filter: options\n      };\n    }\n    options = resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter = options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n      onCancel(function () {\n        self.off(event, listener);\n      });\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  };\n  function once(emitter, name, options) {\n    options = resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n    var _Promise = options.Promise;\n    return makeCancelablePromise(_Promise, function (resolve, reject, onCancel) {\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler = function () {\n          resolve(toArray.apply(null, arguments));\n        };\n        onCancel(function () {\n          emitter.removeEventListener(name, handler);\n        });\n        emitter.addEventListener(name, handler, {\n          once: true\n        });\n        return;\n      }\n      var eventListener = function () {\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n      var errorListener;\n      if (name !== 'error') {\n        errorListener = function (err) {\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n        emitter.once('error', errorListener);\n      }\n      onCancel(function () {\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n  var prototype = EventEmitter.prototype;\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number');\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperties(prototype, {\n    _maxListeners: {\n      value: defaultMaxListeners,\n      writable: true,\n      configurable: true\n    },\n    _observers: {\n      value: null,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  } else {\n    // global for any kind of environment.\n    var _global = new Function('', 'return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();","map":{"version":3,"names":["undefined","hasOwnProperty","Object","isArray","Array","_isArray","obj","prototype","toString","call","defaultMaxListeners","nextTickSupported","process","nextTick","symbolsSupported","Symbol","reflectSupported","Reflect","setImmediateSupported","setImmediate","_setImmediate","setTimeout","ownKeys","arr","getOwnPropertyNames","push","apply","getOwnPropertySymbols","keys","init","_events","_conf","configure","conf","delimiter","maxListeners","_maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","ignoreErrors","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","emitWarning","e","Error","name","emitter","console","error","trace","toArray","a","b","c","n","arguments","length","toObject","values","key","len","valuesCount","i","TargetObserver","target","options","_emitter","_target","_listeners","_listenersCount","on","off","addEventListener","removeEventListener","addListener","TypeError","_on","_off","_observers","assign","subscribe","event","localEvent","reducer","observer","listeners","handler","args","eventObj","data","original","result","emit","concat","_onNewListener","_event","_onRemoveListener","hasListeners","unsubscribe","events","clearRefs","index","findTargetIndex","splice","resolveOptions","schema","reducers","allowUnknown","computedOptions","option","value","reject","reason","constructorReducer","makeTypeReducer","types","message","join","firstType","secondType","v","kind","functionReducer","objectFunctionReducer","makeCancelablePromise","Promise","executor","isCancelable","callbacks","timer","subscriptionClosed","promise","resolve","onCancel","timeout","overload","Number","isFinite","cancel","cleanup","clearTimeout","_resolve","_reject","err","cb","code","observers","searchListenerTree","handlers","type","tree","typeLength","ns","l","j","dl","indexOf","slice","branch","xTree","xxTree","isolatedBranch","endReached","currentType","nextType","branches","growListenerTree","listener","prepend","unshift","warned","collectTreeEvents","root","asArray","branchName","path","isArrayPath","recursivelyGarbageCollect","flag","Listener","setupListener","promisify","async","objectify","_listener","_origin","constructor","context","then","_async","EventEmitter","EventEmitter2","listenTo","listen","isSingleReducer","split","stopListeningTo","matched","setMaxListeners","getMaxListeners","once","fn","_once","prependOnceListener","_many","many","ttl","prependMany","self","_all","containsSymbol","al","emitAsync","promises","all","prependListener","onAny","_onAny","prependAny","returnValue","temp","leafs","iLeaf","leaf","position","offAny","fns","removeAllListeners","allListeners","eventNames","nsAsArray","listenerCount","listenersAny","waitFor","filter","handleError","_Promise","eventListener","errorListener","defineProperties","get","set","isNaN","enumerable","writable","configurable","define","amd","exports","module","_global","Function"],"sources":["/home/oben-n/react-ros-robot/node_modules/eventemitter2/lib/eventemitter2.js"],"sourcesContent":["/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}