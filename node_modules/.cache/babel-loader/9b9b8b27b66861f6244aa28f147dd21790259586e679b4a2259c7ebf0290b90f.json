{"ast":null,"code":"var _jsxFileName = \"/home/oben-n/react-ros-robot/src/components/RobotState.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport Config from \"../scripts/config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RobotState extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      x: 0,\n      y: 0,\n      orientation: 0,\n      linear_verlocity: 0,\n      angular_velocity: 0\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); // window must be used because package is called from index.html\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleop\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"here\");\n      console.log(\"connection closed!\");\n      this.setState({\n        connected: false\n      });\n\n      // try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n  getRobotState() {\n    // create pose subscriber\n    var pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/amcl_pose\",\n      messageType: \"geometry_msgs/PoseWithCovarianceStamped\"\n    });\n\n    // create pose callback\n    pose_subscriber.subscribe(message => {\n      this.setState({\n        x: message.pose.pose.position.x\n      });\n    });\n\n    // // create velocity subcriber\n    // velocity_subscriber = new window.ROSLIB.Topic({\n    //         ros:this.state.ros,\n    //         name: \"/odometry\",\n    //         messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"X: \", this.state.x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Y: \", this.state.y]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Orientation: \", this.state.orientation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Velocity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Linear X: \", this.state.linear_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Angular Z: \", this.state.angular_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RobotState;","map":{"version":3,"names":["React","Component","Row","Col","Container","Config","RobotState","constructor","state","ros","x","y","orientation","linear_verlocity","angular_velocity","init_connection","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","getRobotState","pose_subscriber","Topic","name","messageType","subscribe","message","pose","position","render","linear_velocity"],"sources":["/home/oben-n/react-ros-robot/src/components/RobotState.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\"\nimport Config from \"../scripts/config.js\"\n\nclass RobotState extends Component {\n    state = {\n        ros: null,\n        x:0,\n        y:0,\n        orientation:0,\n        linear_verlocity:0,\n        angular_velocity:0,\n    };\n\n    constructor() {\n        super();\n        this.init_connection();\n    }\n    \n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros(); // window must be used because package is called from index.html\n        console.log(this.state.ros);\n        \n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established in Teleop\");\n            this.setState({connected: true});\n        }); \n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"here\");\n            console.log(\"connection closed!\");\n            this.setState({connected: false});\n\n            // try to reconnect every 3 seconds\n            setTimeout(() => {\n                try {\n                    this.state.ros.connect(\n                        \"ws://\" + \n                        Config.ROSBRIDGE_SERVER_IP + \n                        \":\" +  \n                        Config.ROSBRIDGE_SERVER_PORT +\n                        \"\"\n                    );\n                } catch (error) {\n                    console.log(\"connection problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try {\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP + \n                \":\" +  \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\"connection problem\");\n        }\n    }\n\ngetRobotState(){\n    // create pose subscriber\n    var pose_subscriber = new window.ROSLIB.Topic({\n            ros:this.state.ros,\n            name: \"/amcl_pose\",\n            messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n    });\n\n    // create pose callback\n    pose_subscriber.subscribe((message) => {\n        this.setState({x: message.pose.pose.position.x});\n    });\n      \n\n    // // create velocity subcriber\n    // velocity_subscriber = new window.ROSLIB.Topic({\n    //         ros:this.state.ros,\n    //         name: \"/odometry\",\n    //         messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n    // });\n}\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Position</h4>\n                        <p className=\"mt-0\">X: {this.state.x}</p>\n                        <p className=\"mt-0\">Y: {this.state.y}</p>\n                        <p className=\"mt-0\">Orientation: {this.state.orientation}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Velocity</h4>\n                        <p className=\"mt-0\">Linear X: {this.state.linear_velocity}</p>\n                        <p className=\"mt-0\">Angular Z: {this.state.angular_velocity}</p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default RobotState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}