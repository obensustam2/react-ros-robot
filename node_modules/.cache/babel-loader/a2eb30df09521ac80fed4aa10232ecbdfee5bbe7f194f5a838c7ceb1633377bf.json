{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Joystick = void 0;\nvar React = require(\"react\");\nvar shape_enum_1 = require(\"./enums/shape.enum\");\nvar shape_factory_1 = require(\"./shapes/shape.factory\");\nvar shape_bounds_factory_1 = require(\"./shapes/shape.bounds.factory\");\nvar InteractionEvents;\n(function (InteractionEvents) {\n  InteractionEvents[\"PointerDown\"] = \"pointerdown\";\n  InteractionEvents[\"PointerMove\"] = \"pointermove\";\n  InteractionEvents[\"PointerUp\"] = \"pointerup\";\n})(InteractionEvents || (InteractionEvents = {}));\n/**\n * Radians identifying the direction of the joystick\n */\nvar RadianQuadrantBinding;\n(function (RadianQuadrantBinding) {\n  RadianQuadrantBinding[RadianQuadrantBinding[\"TopRight\"] = 2.35619449] = \"TopRight\";\n  RadianQuadrantBinding[RadianQuadrantBinding[\"TopLeft\"] = -2.35619449] = \"TopLeft\";\n  RadianQuadrantBinding[RadianQuadrantBinding[\"BottomRight\"] = 0.785398163] = \"BottomRight\";\n  RadianQuadrantBinding[RadianQuadrantBinding[\"BottomLeft\"] = -0.785398163] = \"BottomLeft\";\n})(RadianQuadrantBinding || (RadianQuadrantBinding = {}));\nvar Joystick = /** @class */function (_super) {\n  __extends(Joystick, _super);\n  function Joystick(props) {\n    var _this = _super.call(this, props) || this;\n    _this._stickRef = React.createRef();\n    _this._baseRef = React.createRef();\n    _this._pointerId = null;\n    _this.state = {\n      dragging: false\n    };\n    _this._throttleMoveCallback = function () {\n      var lastCall = 0;\n      return function (event) {\n        var now = new Date().getTime();\n        var throttleAmount = _this.props.throttle || 0;\n        if (now - lastCall < throttleAmount) {\n          return;\n        }\n        lastCall = now;\n        if (_this.props.move) {\n          return _this.props.move(event);\n        }\n      };\n    }();\n    return _this;\n  }\n  Joystick.prototype.componentWillUnmount = function () {\n    var _this = this;\n    if (this.props.followCursor) {\n      window.removeEventListener(InteractionEvents.PointerMove, function (event) {\n        return _this._pointerMove(event);\n      });\n    }\n  };\n  Joystick.prototype.componentDidMount = function () {\n    var _this = this;\n    if (this.props.followCursor) {\n      //@ts-ignore\n      this._parentRect = this._baseRef.current.getBoundingClientRect();\n      this.setState({\n        dragging: true\n      });\n      window.addEventListener(InteractionEvents.PointerMove, function (event) {\n        return _this._pointerMove(event);\n      });\n      if (this.props.start) {\n        this.props.start({\n          type: \"start\",\n          x: null,\n          y: null,\n          distance: null,\n          direction: null\n        });\n      }\n    }\n  };\n  /**\n   * Update position of joystick - set state and trigger DOM manipulation\n   * @param coordinates\n   * @private\n   */\n  Joystick.prototype._updatePos = function (coordinates) {\n    var _this = this;\n    window.requestAnimationFrame(function () {\n      _this.setState({\n        coordinates: coordinates\n      });\n    });\n    if (typeof this.props.minDistance === 'number') {\n      if (coordinates.distance < this.props.minDistance) {\n        return;\n      }\n    }\n    this._throttleMoveCallback({\n      type: \"move\",\n      x: coordinates.relativeX,\n      y: -coordinates.relativeY,\n      direction: coordinates.direction,\n      distance: coordinates.distance\n    });\n  };\n  /**\n   * Handle pointerdown event\n   * @param e PointerEvent\n   * @private\n   */\n  Joystick.prototype._pointerDown = function (e) {\n    var _this = this;\n    if (this.props.disabled || this.props.followCursor) {\n      return;\n    }\n    //@ts-ignore\n    this._parentRect = this._baseRef.current.getBoundingClientRect();\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener(InteractionEvents.PointerUp, function (event) {\n      return _this._pointerUp(event);\n    });\n    window.addEventListener(InteractionEvents.PointerMove, function (event) {\n      return _this._pointerMove(event);\n    });\n    this._pointerId = e.pointerId;\n    //@ts-ignore\n    this._stickRef.current.setPointerCapture(e.pointerId);\n    if (this.props.start) {\n      this.props.start({\n        type: \"start\",\n        x: null,\n        y: null,\n        distance: null,\n        direction: null\n      });\n    }\n  };\n  /**\n   * Use ArcTan2 (4 Quadrant inverse tangent) to identify the direction the joystick is pointing\n   * https://docs.oracle.com/cd/B12037_01/olap.101/b10339/x_arcsin003.htm\n   * @param atan2: number\n   * @private\n   */\n  Joystick.prototype._getDirection = function (atan2) {\n    if (atan2 > RadianQuadrantBinding.TopRight || atan2 < RadianQuadrantBinding.TopLeft) {\n      return \"FORWARD\";\n    } else if (atan2 < RadianQuadrantBinding.TopRight && atan2 > RadianQuadrantBinding.BottomRight) {\n      return \"RIGHT\";\n    } else if (atan2 < RadianQuadrantBinding.BottomLeft) {\n      return \"LEFT\";\n    }\n    return \"BACKWARD\";\n  };\n  /**\n   * Hypotenuse distance calculation\n   * @param x: number\n   * @param y: number\n   * @private\n   */\n  Joystick.prototype._distance = function (x, y) {\n    return Math.hypot(x, y);\n  };\n  Joystick.prototype._distanceToPercentile = function (distance) {\n    var percentageBaseSize = distance / (this._baseSize / 2) * 100;\n    if (percentageBaseSize > 100) {\n      return 100;\n    }\n    return percentageBaseSize;\n  };\n  /**\n   * Calculate X/Y and ArcTan within the bounds of the joystick\n   * @param event\n   * @private\n   */\n  Joystick.prototype._pointerMove = function (event) {\n    event.preventDefault();\n    if (this.state.dragging) {\n      if (!this.props.followCursor && event.pointerId !== this._pointerId) return;\n      var absoluteX = event.clientX;\n      var absoluteY = event.clientY;\n      var relativeX = absoluteX - this._parentRect.left - this._radius;\n      var relativeY = absoluteY - this._parentRect.top - this._radius;\n      var dist = this._distance(relativeX, relativeY);\n      // @ts-ignore\n      var bounded = (0, shape_bounds_factory_1.shapeBoundsFactory)(\n      //@ts-ignore\n      this.props.controlPlaneShape || this.props.baseShape, absoluteX, absoluteY, relativeX, relativeY, dist, this._radius, this._baseSize, this._parentRect);\n      relativeX = bounded.relativeX;\n      relativeY = bounded.relativeY;\n      var atan2 = Math.atan2(relativeX, relativeY);\n      this._updatePos({\n        relativeX: relativeX,\n        relativeY: relativeY,\n        distance: this._distanceToPercentile(dist),\n        direction: this._getDirection(atan2),\n        axisX: absoluteX - this._parentRect.left,\n        axisY: absoluteY - this._parentRect.top\n      });\n    }\n  };\n  /**\n   * Handle pointer up and de-register listen events\n   * @private\n   */\n  Joystick.prototype._pointerUp = function (event) {\n    var _this = this;\n    if (event.pointerId !== this._pointerId) return;\n    var stateUpdate = {\n      dragging: false\n    };\n    if (!this.props.sticky) {\n      stateUpdate.coordinates = undefined;\n    }\n    window.requestAnimationFrame(function () {\n      _this.setState(stateUpdate);\n    });\n    window.removeEventListener(InteractionEvents.PointerUp, function (event) {\n      return _this._pointerUp(event);\n    });\n    window.removeEventListener(InteractionEvents.PointerMove, function (event) {\n      return _this._pointerMove(event);\n    });\n    this._pointerId = null;\n    if (this.props.stop) {\n      this.props.stop({\n        type: \"stop\",\n        // @ts-ignore\n        x: this.props.sticky ? this.state.coordinates.relativeX : null,\n        // @ts-ignore\n        y: this.props.sticky ? this.state.coordinates.relativeY : null,\n        // @ts-ignore\n        direction: this.props.sticky ? this.state.coordinates.direction : null,\n        // @ts-ignore\n        distance: this.props.sticky ? this.state.coordinates.distance : null\n      });\n    }\n  };\n  /**\n   * Get the shape stylings for the base\n   * @private\n   */\n  Joystick.prototype.getBaseShapeStyle = function () {\n    var shape = this.props.baseShape || shape_enum_1.JoystickShape.Circle;\n    return (0, shape_factory_1.shapeFactory)(shape, this._baseSize);\n  };\n  /**\n   * Get the shape stylings for the stick\n   * @private\n   */\n  Joystick.prototype.getStickShapeStyle = function () {\n    var shape = this.props.stickShape || shape_enum_1.JoystickShape.Circle;\n    return (0, shape_factory_1.shapeFactory)(shape, this._baseSize);\n  };\n  /**\n   * Calculate base styles for pad\n   * @private\n   */\n  Joystick.prototype._getBaseStyle = function () {\n    var baseColor = this.props.baseColor !== undefined ? this.props.baseColor : \"#000033\";\n    var baseSizeString = \"\".concat(this._baseSize, \"px\");\n    var padStyle = __assign(__assign({}, this.getBaseShapeStyle()), {\n      height: baseSizeString,\n      width: baseSizeString,\n      background: baseColor,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    });\n    if (this.props.baseImage) {\n      padStyle.background = \"url(\".concat(this.props.baseImage, \")\");\n      padStyle.backgroundSize = '100%';\n    }\n    return padStyle;\n  };\n  /**\n   * Calculate  base styles for joystick and translate\n   * @private\n   */\n  Joystick.prototype._getStickStyle = function () {\n    var stickColor = this.props.stickColor !== undefined ? this.props.stickColor : \"#3D59AB\";\n    var stickSize = this._stickSize ? \"\".concat(this._stickSize, \"px\") : \"\".concat(this._baseSize / 1.5, \"px\");\n    var stickStyle = __assign(__assign({}, this.getStickShapeStyle()), {\n      background: stickColor,\n      cursor: \"move\",\n      height: stickSize,\n      width: stickSize,\n      border: 'none',\n      flexShrink: 0,\n      touchAction: 'none'\n    });\n    if (this.props.stickImage) {\n      stickStyle.background = \"url(\".concat(this.props.stickImage, \")\");\n      stickStyle.backgroundSize = '100%';\n    }\n    if (this.state.coordinates !== undefined) {\n      stickStyle = Object.assign({}, stickStyle, {\n        position: 'absolute',\n        transform: \"translate3d(\".concat(this.state.coordinates.relativeX, \"px, \").concat(this.state.coordinates.relativeY, \"px, 0)\")\n      });\n    }\n    return stickStyle;\n  };\n  Joystick.prototype.render = function () {\n    var _this = this;\n    this._baseSize = this.props.size || 100;\n    this._stickSize = this.props.stickSize;\n    this._radius = this._baseSize / 2;\n    var baseStyle = this._getBaseStyle();\n    var stickStyle = this._getStickStyle();\n    //@ts-ignore\n    return React.createElement(\"div\", {\n      className: this.props.disabled ? 'joystick-base-disabled' : '',\n      ref: this._baseRef,\n      style: baseStyle\n    }, React.createElement(\"button\", {\n      ref: this._stickRef,\n      disabled: this.props.disabled,\n      onPointerDown: function (event) {\n        return _this._pointerDown(event);\n      },\n      className: this.props.disabled ? 'joystick-disabled' : '',\n      style: stickStyle\n    }));\n  };\n  return Joystick;\n}(React.Component);\nexports.Joystick = Joystick;","map":{"version":3,"mappings":"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","names":["InteractionEvents","RadianQuadrantBinding","__extends","props","_super","_this","React","createRef","state","dragging","_throttleMoveCallback","lastCall","event","now","Date","getTime","throttleAmount","throttle","move","Joystick","followCursor","window","removeEventListener","PointerMove","_pointerMove","_parentRect","_baseRef","current","getBoundingClientRect","setState","addEventListener","start","type","x","y","distance","direction","coordinates","requestAnimationFrame","minDistance","relativeX","relativeY","e","disabled","PointerUp","_pointerUp","_pointerId","pointerId","_stickRef","setPointerCapture","atan2","TopRight","TopLeft","BottomRight","BottomLeft","Math","hypot","percentageBaseSize","_baseSize","preventDefault","absoluteX","clientX","absoluteY","clientY","left","_radius","top","dist","_distance","bounded","controlPlaneShape","baseShape","_updatePos","_distanceToPercentile","_getDirection","axisX","axisY","stateUpdate","sticky","undefined","stop","shape","shape_enum_1","Circle","stickShape","baseColor","baseSizeString","padStyle","__assign","getBaseShapeStyle","height","width","background","display","justifyContent","alignItems","baseImage","backgroundSize","stickColor","stickSize","_stickSize","stickStyle","getStickShapeStyle","cursor","border","flexShrink","touchAction","stickImage","Object","assign","position","transform","size","baseStyle","_getBaseStyle","_getStickStyle","className","ref","style","onPointerDown","_pointerDown","Component","exports"],"sources":["/home/oben-n/react-ros-robot/node_modules/react-joystick-component/src/Joystick.tsx"],"sourcesContent":["import * as React from 'react';\nimport {JoystickShape} from \"./enums/shape.enum\";\nimport {shapeFactory} from \"./shapes/shape.factory\";\nimport {shapeBoundsFactory} from \"./shapes/shape.bounds.factory\";\n\nexport interface IJoystickProps {\n    size?: number;\n    stickSize?: number;\n    baseColor?: string;\n    stickColor?: string;\n    throttle?: number;\n    disabled?: boolean;\n    sticky?: boolean;\n    move?: (event: IJoystickUpdateEvent) => void;\n    stop?: (event: IJoystickUpdateEvent) => void;\n    start?: (event: IJoystickUpdateEvent) => void;\n    stickImage?: string;\n    baseImage?: string;\n    followCursor?: boolean;\n    baseShape?: JoystickShape;\n    stickShape?: JoystickShape;\n    controlPlaneShape?: JoystickShape;\n    minDistance?: number;\n}\n\nenum InteractionEvents {\n    PointerDown = \"pointerdown\",\n    PointerMove = \"pointermove\",\n    PointerUp = \"pointerup\"\n}\n\nexport interface IJoystickUpdateEvent {\n    type: \"move\" | \"stop\" | \"start\";\n    // TODO: these could just be optional, but this may be a breaking change\n    x: number | null;\n    y: number | null;\n    direction: JoystickDirection | null;\n    distance: number | null;\n}\n\nexport interface IJoystickState {\n    dragging: boolean;\n    coordinates?: IJoystickCoordinates;\n}\n\ntype JoystickDirection = \"FORWARD\" | \"RIGHT\" | \"LEFT\" | \"BACKWARD\";\n\nexport interface IJoystickCoordinates {\n    relativeX: number;\n    relativeY: number;\n    axisX: number;\n    axisY: number;\n    direction: JoystickDirection;\n    distance: number;\n}\n\n\n/**\n * Radians identifying the direction of the joystick\n */\nenum RadianQuadrantBinding {\n    TopRight = 2.35619449,\n    TopLeft = -2.35619449,\n    BottomRight = 0.785398163,\n    BottomLeft = -0.785398163\n}\n\nclass Joystick extends React.Component<IJoystickProps, IJoystickState> {\n    private readonly _stickRef: React.RefObject<HTMLButtonElement> = React.createRef();\n    private readonly _baseRef: React.RefObject<HTMLDivElement> = React.createRef();\n    private readonly _throttleMoveCallback: (data: IJoystickUpdateEvent) => void;\n    private _baseSize: number;\n    private _stickSize?: number;\n\n    private _radius: number;\n    private _parentRect: DOMRect;\n    private _pointerId: number|null = null\n\n    constructor(props: IJoystickProps) {\n        super(props);\n        this.state = {\n            dragging: false\n        };\n        this._throttleMoveCallback = (() => {\n            let lastCall = 0;\n            return (event: IJoystickUpdateEvent) => {\n\n                const now = new Date().getTime();\n                const throttleAmount = this.props.throttle || 0;\n                if (now - lastCall < throttleAmount) {\n                    return;\n                }\n                lastCall = now;\n                if (this.props.move) {\n                    return this.props.move(event);\n                }\n            };\n        })();\n\n\n\n    }\n\n    componentWillUnmount() {\n        if (this.props.followCursor) {\n            window.removeEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.followCursor) {\n            //@ts-ignore\n            this._parentRect = this._baseRef.current.getBoundingClientRect();\n\n            this.setState({\n                dragging: true\n            });\n\n            window.addEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));\n\n            if (this.props.start) {\n                this.props.start({\n                    type: \"start\",\n                    x: null,\n                    y: null,\n                    distance: null,\n                    direction: null\n                });\n            }\n\n        }\n    }\n\n    /**\n     * Update position of joystick - set state and trigger DOM manipulation\n     * @param coordinates\n     * @private\n     */\n    private _updatePos(coordinates: IJoystickCoordinates) {\n\n        window.requestAnimationFrame(() => {\n            this.setState({\n                coordinates\n            });\n        });\n        if(typeof this.props.minDistance ===  'number'){\n            if(coordinates.distance < this.props.minDistance){\n                return;\n            }\n        }\n        this._throttleMoveCallback({\n            type: \"move\",\n            x: coordinates.relativeX,\n            y: -coordinates.relativeY,\n            direction: coordinates.direction,\n            distance: coordinates.distance\n        });\n\n    }\n\n    /**\n     * Handle pointerdown event\n     * @param e PointerEvent\n     * @private\n     */\n    private _pointerDown(e: PointerEvent) {\n        if (this.props.disabled || this.props.followCursor) {\n            return;\n        }\n        //@ts-ignore\n        this._parentRect = this._baseRef.current.getBoundingClientRect();\n\n        this.setState({\n            dragging: true\n        });\n\n        window.addEventListener(InteractionEvents.PointerUp, event => this._pointerUp(event));\n        window.addEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));\n        this._pointerId = e.pointerId\n        //@ts-ignore\n        this._stickRef.current.setPointerCapture(e.pointerId);\n\n        if (this.props.start) {\n            this.props.start({\n                type: \"start\",\n                x: null,\n                y: null,\n                distance: null,\n                direction: null\n            });\n        }\n\n    }\n\n    /**\n     * Use ArcTan2 (4 Quadrant inverse tangent) to identify the direction the joystick is pointing\n     * https://docs.oracle.com/cd/B12037_01/olap.101/b10339/x_arcsin003.htm\n     * @param atan2: number\n     * @private\n     */\n    private _getDirection(atan2: number): JoystickDirection {\n        if (atan2 > RadianQuadrantBinding.TopRight || atan2 < RadianQuadrantBinding.TopLeft) {\n            return \"FORWARD\";\n        } else if (atan2 < RadianQuadrantBinding.TopRight && atan2 > RadianQuadrantBinding.BottomRight) {\n            return \"RIGHT\"\n        } else if (atan2 < RadianQuadrantBinding.BottomLeft) {\n            return \"LEFT\";\n        }\n        return \"BACKWARD\";\n\n\n    }\n\n    /**\n     * Hypotenuse distance calculation\n     * @param x: number\n     * @param y: number\n     * @private\n     */\n    private _distance(x: number, y: number): number {\n        return Math.hypot(x, y);\n    }\n    private _distanceToPercentile(distance:number): number {\n        const percentageBaseSize = distance / (this._baseSize/2) * 100;\n        if(percentageBaseSize > 100){\n            return 100;\n        }\n        return percentageBaseSize;\n    }\n\n    /**\n     * Calculate X/Y and ArcTan within the bounds of the joystick\n     * @param event\n     * @private\n     */\n    private _pointerMove(event: PointerEvent) {\n        event.preventDefault()\n        if (this.state.dragging) {\n            if(!this.props.followCursor && event.pointerId !== this._pointerId) return;\n            const absoluteX = event.clientX;\n            const absoluteY = event.clientY;\n            let relativeX = absoluteX - this._parentRect.left - this._radius;\n            let relativeY = absoluteY - this._parentRect.top - this._radius;\n            const dist = this._distance(relativeX, relativeY);\n            // @ts-ignore\n            const bounded = shapeBoundsFactory(\n                //@ts-ignore\n                this.props.controlPlaneShape || this.props.baseShape,\n                absoluteX,\n                absoluteY,\n                relativeX,\n                relativeY,\n                dist,\n                this._radius,\n                this._baseSize,\n                this._parentRect);\n            relativeX = bounded.relativeX\n            relativeY = bounded.relativeY\n            const atan2 = Math.atan2(relativeX, relativeY);\n\n            this._updatePos({\n                relativeX,\n                relativeY,\n                distance: this._distanceToPercentile(dist),\n                direction: this._getDirection(atan2),\n                axisX: absoluteX - this._parentRect.left,\n                axisY: absoluteY - this._parentRect.top\n            });\n        }\n    }\n\n\n\n    /**\n     * Handle pointer up and de-register listen events\n     * @private\n     */\n    private _pointerUp(event: PointerEvent) {\n        if(event.pointerId !== this._pointerId) return;\n        const stateUpdate = {\n            dragging: false,\n        } as any;\n        if (!this.props.sticky) {\n            stateUpdate.coordinates = undefined;\n        }\n        window.requestAnimationFrame(() => {\n            this.setState(stateUpdate);\n        });\n        window.removeEventListener(InteractionEvents.PointerUp, event => this._pointerUp(event));\n        window.removeEventListener(InteractionEvents.PointerMove, event => this._pointerMove(event));\n        this._pointerId = null;\n        if (this.props.stop) {\n            this.props.stop({\n                type: \"stop\",\n                // @ts-ignore\n                x: this.props.sticky ? this.state.coordinates.relativeX : null,\n                // @ts-ignore\n                y: this.props.sticky ? this.state.coordinates.relativeY : null,\n                // @ts-ignore\n                direction: this.props.sticky ? this.state.coordinates.direction : null,\n                // @ts-ignore\n                distance: this.props.sticky ? this.state.coordinates.distance : null\n\n            });\n        }\n\n    }\n\n    /**\n     * Get the shape stylings for the base\n     * @private\n     */\n    private getBaseShapeStyle() {\n        const shape = this.props.baseShape || JoystickShape.Circle;\n        return shapeFactory(shape, this._baseSize);\n    }\n    /**\n     * Get the shape stylings for the stick\n     * @private\n     */\n    private getStickShapeStyle() {\n        const shape = this.props.stickShape || JoystickShape.Circle;\n        return shapeFactory(shape, this._baseSize);\n    }\n    /**\n     * Calculate base styles for pad\n     * @private\n     */\n    private _getBaseStyle(): any {\n        const baseColor: string = this.props.baseColor !== undefined ? this.props.baseColor : \"#000033\";\n\n        const baseSizeString = `${this._baseSize}px`;\n        const padStyle = {\n            ...this.getBaseShapeStyle(),\n            height: baseSizeString,\n            width: baseSizeString,\n            background: baseColor,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        } as any;\n        if (this.props.baseImage) {\n            padStyle.background = `url(${this.props.baseImage})`;\n            padStyle.backgroundSize = '100%'\n        }\n        return padStyle;\n\n    }\n\n    /**\n     * Calculate  base styles for joystick and translate\n     * @private\n     */\n    private _getStickStyle(): any {\n        const stickColor: string = this.props.stickColor !== undefined ? this.props.stickColor : \"#3D59AB\";\n        const stickSize = this._stickSize ? `${this._stickSize}px` :`${this._baseSize / 1.5}px`;\n\n        let stickStyle = {\n            ...this.getStickShapeStyle(),\n            background: stickColor,\n            cursor: \"move\",\n            height: stickSize,\n            width: stickSize,\n            border: 'none',\n            flexShrink: 0,\n            touchAction: 'none'\n        } as any;\n        if (this.props.stickImage) {\n            stickStyle.background = `url(${this.props.stickImage})`;\n            stickStyle.backgroundSize = '100%'\n        }\n\n        if (this.state.coordinates !== undefined) {\n            stickStyle = Object.assign({}, stickStyle, {\n                position: 'absolute',\n                transform: `translate3d(${this.state.coordinates.relativeX}px, ${this.state.coordinates.relativeY}px, 0)`\n            });\n        }\n        return stickStyle;\n\n    }\n\n    render() {\n        this._baseSize = this.props.size || 100;\n        this._stickSize = this.props.stickSize;\n        this._radius = this._baseSize / 2;\n        const baseStyle = this._getBaseStyle();\n        const stickStyle = this._getStickStyle();\n        //@ts-ignore\n        return (\n            <div className={this.props.disabled ? 'joystick-base-disabled' : ''}\n\n                 ref={this._baseRef}\n                 style={baseStyle}>\n                <button ref={this._stickRef}\n                        disabled={this.props.disabled}\n                        onPointerDown={(event: any) => this._pointerDown(event)}\n                        className={this.props.disabled ? 'joystick-disabled' : ''}\n                        style={stickStyle}/>\n            </div>\n        )\n    }\n}\n\nexport {\n    Joystick\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}